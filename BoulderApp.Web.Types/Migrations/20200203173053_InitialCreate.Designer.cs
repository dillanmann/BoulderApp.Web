// <auto-generated />
using System;
using BoulderApp.Web.Types;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BoulderApp.Web.Types.Migrations
{
    [DbContext(typeof(BoulderAppContext))]
    [Migration("20200203173053_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BoulderApp.Model.Center", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Centers");
                });

            modelBuilder.Entity("BoulderApp.Model.Circuit", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CenterId");

                    b.Property<DateTime>("DateDown");

                    b.Property<DateTime>("DateUp");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.ToTable("Circuits");
                });

            modelBuilder.Entity("BoulderApp.Model.Problem", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CircuitId");

                    b.Property<int>("Grade");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CircuitId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("BoulderApp.Model.ProblemAttempt", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<Guid?>("ProblemAttemptedId");

                    b.Property<bool>("Sent");

                    b.Property<Guid?>("SessionId");

                    b.HasKey("Id");

                    b.HasIndex("ProblemAttemptedId");

                    b.HasIndex("SessionId");

                    b.ToTable("ProblemAttempts");
                });

            modelBuilder.Entity("BoulderApp.Model.Session", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CenterId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Name");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("BoulderApp.Model.User", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BoulderApp.Model.Circuit", b =>
                {
                    b.HasOne("BoulderApp.Model.Center")
                        .WithMany("Circuits")
                        .HasForeignKey("CenterId");
                });

            modelBuilder.Entity("BoulderApp.Model.Problem", b =>
                {
                    b.HasOne("BoulderApp.Model.Circuit")
                        .WithMany("Problems")
                        .HasForeignKey("CircuitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BoulderApp.Model.ProblemAttempt", b =>
                {
                    b.HasOne("BoulderApp.Model.Problem", "ProblemAttempted")
                        .WithMany()
                        .HasForeignKey("ProblemAttemptedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BoulderApp.Model.Session")
                        .WithMany("ProblemAttempts")
                        .HasForeignKey("SessionId");
                });

            modelBuilder.Entity("BoulderApp.Model.Session", b =>
                {
                    b.HasOne("BoulderApp.Model.Center", "Center")
                        .WithMany()
                        .HasForeignKey("CenterId");

                    b.HasOne("BoulderApp.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
